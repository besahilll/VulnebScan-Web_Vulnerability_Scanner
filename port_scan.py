
import socket
import threading

def scan_port(target_host, port, vulnerable_ports):
    sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    sock.settimeout(3)  # Timeout for connection attempt
    result = sock.connect_ex((target_host, port))
    sock.close()
    if result == 0:
        print(f"Port {port} is open")
        check_vulnerability(port, vulnerable_ports)

def check_vulnerability(port, vulnerable_ports):
    if port == 80:
        vulnerable_ports.append((port, "Potential HTTP vulnerability"))
    elif port == 443:
        vulnerable_ports.append((port, "Potential HTTPS vulnerability"))
    elif port == 137:
        vulnerable_ports.append((port, "Potential NetBIOS over TCP vulnerability"))
    elif port == 137:
        vulnerable_ports.append((port, "Potential NetBIOS over TCP vulnerability"))
    elif port == 445:
        vulnerable_ports.append((port, "Potential SMB vulnerability"))
    elif port == 902:
        vulnerable_ports.append((port, "Potential  Protocol to connect VMware to vcenter and vsphere vulnerability"))
    elif port == 912:
        vulnerable_ports.append((port, "Potential TCP/UDP vulnerability"))
    elif port == 3389:
        vulnerable_ports.append((port, "Potential Remote Desktop vulnerability"))
    elif port == 23:
        vulnerable_ports.append((port, "Potential Telnet vulnerability"))
    elif port == 53:
        vulnerable_ports.append((port, "Potential DNS vulnerability"))
    elif port == 22:
        vulnerable_ports.append((port, "Potential SSH vulnerability"))

def scan_ports(target_host, port_range, vulnerable_ports):
    print(f"Scanning {target_host} for open ports...")
    threads = []
    for port in port_range:
        thread = threading.Thread(target=scan_port, args=(target_host, port, vulnerable_ports))
        thread.start()
        threads.append(thread)
    
    for thread in threads:
        thread.join()

    print("Scan completed.")
